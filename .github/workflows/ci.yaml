name: CI
on:
  pull_request:
    types:
      - opened
      - synchronize
env:
  RUBY_VERSION: '3.1.2'
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v2
      # https://github.com/ruby/setup-ruby
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: ${{ env.RUBY_VERSION }}
      # https://github.com/reviewdog/action-rubocop
      - uses: reviewdog/action-rubocop@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check
          rubocop_version: gemfile
  unit_test:
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v2
      # https://github.com/ruby/setup-ruby
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: bundle exec rspec
        run: bundle exec rspec
      - name: set-output name=coverage
        id: set_output_name_coverage
        run: |
          coverage=$(cat coverage/.last_run.json | jq -r '.result.line')
          echo "::set-output name=coverage::${coverage}"
      # https://github.com/actions/github-script
      - uses: actions/github-script@v5
        env:
          COVERAGE: ${{ steps.set_output_name_coverage.outputs.coverage }}
        with:
          script: |
            const body = `Coverage: ${process.env.COVERAGE}%`

            const options = github.rest.issues.listComments.endpoint.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            })

            const comments = await github.paginate(options)
            const comment = comments.find(c => c.body == body)

            if (comment) {
              return
            }

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            })
